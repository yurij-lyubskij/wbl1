package solution

import "fmt"

//Дана последовательность температурных колебаний:
//-25.4, -27.0 13.0, 19.0, 15.5, 24.5, -21.0, 32.5.
//Объединить данные значения в группы с шагом в 10 градусов.
//Последовательность в подмножноствах не важна.
//Пример: -20:{-25.0, -27.0, -21.0}, 10:{13.0, 19.0, 15.5}, 20: {24.5}, etc.

//создаем карту, где ключ - группа,
// значение - слайс значений температуры
//группа находится через целую часть от деления на шаг
func GroupByStep(temp []float64, step int) map[int][]float64 {
	myMap := make(map[int][]float64)
	for _, i := range temp {
		var group = (int)(i) / step
		key := group * 10
		arr, ok := myMap[key]
		if !ok {
			//в принципе проверку ок можно пропустить
			arr = []float64{}
		}
		arr = append(arr, i)
		myMap[key] = arr
	}
	return myMap
}

func (*Index) N10() {
	//входной массив
	fmt.Println("входной массив:")
	temp := [...]float64{-25.4, -27.0, 13.0, -8, 19.0, 15.5, 24.5,
		0, -21.0, 32.5, 8, 1, 11, -11}
	fmt.Println(temp)
	step := 10
	fmt.Println("Распределяем по группам и выводим")
	//Распределяем по группам с помощью карты
	myMap := GroupByStep(temp[:], step)
	//выводим карту
	fmt.Println(myMap)
}
